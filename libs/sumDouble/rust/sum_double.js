let wasm,cachedFloat64Memory0=null;function getFloat64Memory0(){return null!==cachedFloat64Memory0&&0!==cachedFloat64Memory0.byteLength||(cachedFloat64Memory0=new Float64Array(wasm.memory.buffer)),cachedFloat64Memory0}let WASM_VECTOR_LEN=0;function passArrayF64ToWasm0(e,t){const n=t(8*e.length,8)>>>0;return getFloat64Memory0().set(e,n/8),WASM_VECTOR_LEN=e.length,n}export function sum_double(e,t){const n=passArrayF64ToWasm0(e,wasm.__wbindgen_malloc),a=WASM_VECTOR_LEN;return wasm.sum_double(n,a,t)}async function __wbg_load(e,t){if("function"==typeof Response&&e instanceof Response){if("function"==typeof WebAssembly.instantiateStreaming)try{return await WebAssembly.instantiateStreaming(e,t)}catch(t){if("application/wasm"==e.headers.get("Content-Type"))throw t;console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",t)}const n=await e.arrayBuffer();return await WebAssembly.instantiate(n,t)}{const n=await WebAssembly.instantiate(e,t);return n instanceof WebAssembly.Instance?{instance:n,module:e}:n}}function __wbg_get_imports(){return{wbg:{}}}function __wbg_init_memory(e,t){}function __wbg_finalize_init(e,t){return wasm=e.exports,__wbg_init.__wbindgen_wasm_module=t,cachedFloat64Memory0=null,wasm}function initSync(e){if(void 0!==wasm)return wasm;const t=__wbg_get_imports();return __wbg_init_memory(t),e instanceof WebAssembly.Module||(e=new WebAssembly.Module(e)),__wbg_finalize_init(new WebAssembly.Instance(e,t),e)}async function __wbg_init(e){if(void 0!==wasm)return wasm;void 0===e&&(e=new URL("sum_double_bg.wasm",import.meta.url));const t=__wbg_get_imports();("string"==typeof e||"function"==typeof Request&&e instanceof Request||"function"==typeof URL&&e instanceof URL)&&(e=fetch(e)),__wbg_init_memory(t);const{instance:n,module:a}=await __wbg_load(await e,t);return __wbg_finalize_init(n,a)}export{initSync};export default __wbg_init;