let wasm;const heap=new Array(128).fill(void 0);function getObject(e){return heap[e]}heap.push(void 0,null,!0,!1);let heap_next=heap.length;function dropObject(e){e<132||(heap[e]=heap_next,heap_next=e)}function takeObject(e){const t=getObject(e);return dropObject(e),t}let cachedUint8Memory0=null;function getUint8Memory0(){return null!==cachedUint8Memory0&&0!==cachedUint8Memory0.byteLength||(cachedUint8Memory0=new Uint8Array(wasm.memory.buffer)),cachedUint8Memory0}function getArrayU8FromWasm0(e,t){return e>>>=0,getUint8Memory0().subarray(e/1,e/1+t)}let WASM_VECTOR_LEN=0;const cachedTextEncoder="undefined"!=typeof TextEncoder?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}},encodeString="function"==typeof cachedTextEncoder.encodeInto?function(e,t){return cachedTextEncoder.encodeInto(e,t)}:function(e,t){const n=cachedTextEncoder.encode(e);return t.set(n),{read:e.length,written:n.length}};function passStringToWasm0(e,t,n){if(void 0===n){const n=cachedTextEncoder.encode(e),o=t(n.length,1)>>>0;return getUint8Memory0().subarray(o,o+n.length).set(n),WASM_VECTOR_LEN=n.length,o}let o=e.length,r=t(o,1)>>>0;const a=getUint8Memory0();let c=0;for(;c<o;c++){const t=e.charCodeAt(c);if(t>127)break;a[r+c]=t}if(c!==o){0!==c&&(e=e.slice(c)),r=n(r,o,o=c+3*e.length,1)>>>0;const t=getUint8Memory0().subarray(r+c,r+o);c+=encodeString(e,t).written}return WASM_VECTOR_LEN=c,r}function isLikeNone(e){return null==e}let cachedInt32Memory0=null;function getInt32Memory0(){return null!==cachedInt32Memory0&&0!==cachedInt32Memory0.byteLength||(cachedInt32Memory0=new Int32Array(wasm.memory.buffer)),cachedInt32Memory0}const cachedTextDecoder="undefined"!=typeof TextDecoder?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};function getStringFromWasm0(e,t){return e>>>=0,cachedTextDecoder.decode(getUint8Memory0().subarray(e,e+t))}function addHeapObject(e){heap_next===heap.length&&heap.push(heap.length+1);const t=heap_next;return heap_next=heap[t],heap[t]=e,t}"undefined"!=typeof TextDecoder&&cachedTextDecoder.decode();let cachedFloat64Memory0=null;function getFloat64Memory0(){return null!==cachedFloat64Memory0&&0!==cachedFloat64Memory0.byteLength||(cachedFloat64Memory0=new Float64Array(wasm.memory.buffer)),cachedFloat64Memory0}function passArrayF64ToWasm0(e,t){const n=t(8*e.length,8)>>>0;return getFloat64Memory0().set(e,n/8),WASM_VECTOR_LEN=e.length,n}function passArray8ToWasm0(e,t){const n=t(1*e.length,1)>>>0;return getUint8Memory0().set(e,n/1),WASM_VECTOR_LEN=e.length,n}export function collision_detection(e,t,n,o){const r=passArrayF64ToWasm0(t,wasm.__wbindgen_malloc),a=WASM_VECTOR_LEN;var c=passArray8ToWasm0(n,wasm.__wbindgen_malloc),i=WASM_VECTOR_LEN;return wasm.collision_detection(addHeapObject(e),r,a,c,i,addHeapObject(n),o)}function handleError(e,t){try{return e.apply(this,t)}catch(e){wasm.__wbindgen_exn_store(addHeapObject(e))}}async function __wbg_load(e,t){if("function"==typeof Response&&e instanceof Response){if("function"==typeof WebAssembly.instantiateStreaming)try{return await WebAssembly.instantiateStreaming(e,t)}catch(t){if("application/wasm"==e.headers.get("Content-Type"))throw t;console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",t)}const n=await e.arrayBuffer();return await WebAssembly.instantiate(n,t)}{const n=await WebAssembly.instantiate(e,t);return n instanceof WebAssembly.Instance?{instance:n,module:e}:n}}function __wbg_get_imports(){const e={wbg:{}};return e.wbg.__wbindgen_is_undefined=function(e){return void 0===getObject(e)},e.wbg.__wbindgen_object_drop_ref=function(e){takeObject(e)},e.wbg.__wbindgen_copy_to_typed_array=function(e,t,n){new Uint8Array(getObject(n).buffer,getObject(n).byteOffset,getObject(n).byteLength).set(getArrayU8FromWasm0(e,t))},e.wbg.__wbindgen_string_get=function(e,t){const n=getObject(t),o="string"==typeof n?n:void 0;var r=isLikeNone(o)?0:passStringToWasm0(o,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),a=WASM_VECTOR_LEN;getInt32Memory0()[e/4+1]=a,getInt32Memory0()[e/4+0]=r},e.wbg.__wbg_stringify_e25465938f3f611f=function(){return handleError((function(e){return addHeapObject(JSON.stringify(getObject(e)))}),arguments)},e.wbg.__wbindgen_throw=function(e,t){throw new Error(getStringFromWasm0(e,t))},e}function __wbg_init_memory(e,t){}function __wbg_finalize_init(e,t){return wasm=e.exports,__wbg_init.__wbindgen_wasm_module=t,cachedFloat64Memory0=null,cachedInt32Memory0=null,cachedUint8Memory0=null,wasm}function initSync(e){if(void 0!==wasm)return wasm;const t=__wbg_get_imports();return __wbg_init_memory(t),e instanceof WebAssembly.Module||(e=new WebAssembly.Module(e)),__wbg_finalize_init(new WebAssembly.Instance(e,t),e)}async function __wbg_init(e){if(void 0!==wasm)return wasm;void 0===e&&(e=new URL("collision_detection_bg.wasm",import.meta.url));const t=__wbg_get_imports();("string"==typeof e||"function"==typeof Request&&e instanceof Request||"function"==typeof URL&&e instanceof URL)&&(e=fetch(e)),__wbg_init_memory(t);const{instance:n,module:o}=await __wbg_load(await e,t);return __wbg_finalize_init(n,o)}export{initSync};export default __wbg_init;